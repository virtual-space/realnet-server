org: markolaban
app: realnet
service: realnet-api

provider:
  name: aws
  runtime: python3.9
  endpointType: REGIONAL

functions:
  app:
    handler: wsgi_handler.handler
    environment:
      REALNET_DB_USER: ${param:REALNET_DB_USER} 
      REALNET_DB_PASS: ${param:REALNET_DB_PASS}
      REALNET_DB_HOST: ${param:REALNET_DB_HOST}
      REALNET_DB_PORT: ${param:REALNET_DB_PORT}
      REALNET_DB_NAME: ${param:REALNET_DB_NAME}
      REALNET_STORAGE_TYPE: ${param:REALNET_STORAGE_TYPE}
      REALNET_STORAGE_S3_BUCKET: ${param:REALNET_STORAGE_S3_BUCKET}
      REALNET_STORAGE_S3_KEY: ${param:REALNET_STORAGE_S3_KEY}
      REALNET_STORAGE_S3_SECRET: ${param:REALNET_STORAGE_S3_SECRET}
      REALNET_STORAGE_S3_REGION: ${param:REALNET_STORAGE_S3_REGION}
      REALNET_NAME: ${param:REALNET_NAME}
      REALNET_USERNAME: ${param:REALNET_USERNAME}
      REALNET_PASSWORD: ${param:REALNET_PASSWORD}
      REALNET_EMAIL: ${param:REALNET_EMAIL}
    events:
      - http: ANY /
        cors: true
      - http: 'ANY {proxy+}'
        cors: true

custom:
  wsgi:
    app: realnet_wsgi_loader.wsgi.app
    pythonBin: python # Some systems with Python3 may require this
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux
  apigwBinary:
    types: #list of mime-types
      - 'image/*'
  slackDeployNotification:
    token: ${param:SLACK_ACCESS_TOKEN}
    channel: ${param:SLACK_CHANNEL_ID}  

plugins:
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-apigw-binary
  - "@schibsted/serverless-slack-deploy-notification"

package:
  exclude:
    - node_modules/**
    - venv/**
